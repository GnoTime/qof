## -*-m4-*-

dnl Process this file with autoconf to produce a configure script.

# FILE:
# configure.in for the QOF package
#
# FUNCTION:
# implements checks for a variety of system-specific functions
#

AC_INIT(qof)
AM_INIT_AUTOMAKE(qof,0.5.2)

LIBQOF_LIBRARY_VERSION=1:0:0
LIBQOFSQL_LIBRARY_VERSION=1:0:0
AC_SUBST(LIBQOF_LIBRARY_VERSION)
AC_SUBST(LIBQOFSQL_LIBRARY_VERSION)

AC_PROG_INTLTOOL

AC_PROG_LIBTOOL

AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_STDC_HEADERS
AC_PROG_YACC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

AC_PATH_XTRA

dnl *****************************************
dnl pkg-config check time
dnl *****************************************

dnl LIBGNOMEVFS_REQUIRED=2.0.0
LIBXML2_REQUIRED=2.5.10

AM_PATH_GLIB_2_0("2.0.0", , ,gobject)

dnl **************************************************************
dnl libxml2
dnl The libxml2 library is required only if the serializer/xml
dnl backend is used. Should probably dynamic-load this thing?
dnl libxml2 v2.5.10 is required for QSF (backend/file)
dnl **************************************************************

PKG_CHECK_MODULES(LIBXML2, libxml-2.0 >= $LIBXML2_REQUIRED)
LIBXML_VERSION=`xml2-config --version`
AC_SUBST(LIBXML2_CFLAGS)
AC_SUBST(LIBXML2_LIBS)

dnl **************************************************************
dnl Stuff needed to build the example progs only ... 
dnl XXX should fix this so that not required if not building examples.
dnl NW: Trying to fix this for pilot-link to build without Gtk.
dnl **************************************************************

GTK_CFLAGS=`$PKG_CONFIG --cflags gtk+-2.0`
GTK_LIBS=`$PKG_CONFIG --libs gtk+-2.0`
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

if test x$GTK_LIBS = x; then
   AC_MSG_WARN([****** GTK libs not found; build without GTK.])
   else
      AC_DEFINE(HAVE_GTK,,We Have Found GTK)
      HAVE_GTK="use_gtk"
fi

AM_CONDITIONAL(BUILD_GTK, [test x$HAVE_GTK != x])
AM_CONDITIONAL(BUILD_GTK, [test "$USE_GTK" = use_gtk])

dnl **************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl **************************************************************

AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_ST_RDEV
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T

dnl *****************************
dnl Checks for library functions.
dnl *****************************

AC_FUNC_STRFTIME
AC_CHECK_FUNCS(getcwd gettimeofday getwd stpcpy strdup strtoul)
AC_REPLACE_FUNCS(strptime localtime_r)


dnl *******************************
dnl Internationalization
dnl ******************************* 

ALL_LINGUAS=" "
GETTEXT_PACKAGE=qof-0.4
AC_SUBST(GETTEXT_PACKAGE)
AM_GLIB_GNU_GETTEXT


AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",
		[Define the gettext package.])

dnl **************************************************************
dnl If DWI is found on the build system, then build with it.
dnl Need to check for libdwi-qof too .... 
dnl **************************************************************

DWI_CFLAGS=`$PKG_CONFIG --cflags dwi-0`
DWI_LIBS=`$PKG_CONFIG --libs dwi-0`
AC_SUBST(DWI_CFLAGS)
AC_SUBST(DWI_LIBS)
                                                                                
if test x$DWI_LIBS = x; then
   AC_MSG_WARN([****** DWI libs not found; build without DWI.])
else
   AC_DEFINE(HAVE_DWI,,We Have Found DWI)
   HAVE_DWI="use_dwi"
fi

AM_CONDITIONAL(BUILD_DWI, [test x$HAVE_DWI != x])
AM_CONDITIONAL(BUILD_DWI, [test "$USE_DWI" = use_dwi])

# check for doxygen, mostly stolen from http://log4cpp.sourceforge.net/
# ----------------------------------------------------------------------------
AC_DEFUN(BB_ENABLE_DOXYGEN,
[
AC_ARG_ENABLE(doxygen, [  --enable-doxygen        enable documentation generation with doxygen (auto)])
AC_ARG_ENABLE(dot, [  --enable-dot            use 'dot' to generate graphs in doxygen (auto)])              
AC_ARG_ENABLE(html-docs, [  --enable-html-docs      enable HTML generation with doxygen (yes)], [], [ enable_html_docs=yes])              
AC_ARG_ENABLE(latex-docs, [  --enable-latex-docs     enable LaTeX documentation generation with doxygen (no)], [], [ enable_latex_docs=no])              
if test "x$enable_doxygen" = xno; then
        enable_doc=no
else 
        AC_PATH_PROG(DOXYGEN, doxygen, , $PATH)
        if test x$DOXYGEN = x; then
                if test "x$enable_doxygen" = xyes; then
                        AC_MSG_ERROR([could not find doxygen])
                fi
                enable_doc=no
        else
                enable_doc=yes
                AC_PATH_PROG(DOT, dot, , $PATH)
        fi
fi
AM_CONDITIONAL(DOC, test x$enable_doc = xyes)

if test x$DOT = x; then
        if test "x$enable_dot" = xyes; then
                AC_MSG_ERROR([could not find dot])
        fi
        enable_dot=no
else
        enable_dot=yes
fi
AM_CONDITIONAL(ENABLE_DOXYGEN, test x$enable_doc = xtrue)
AC_SUBST(enable_dot)
AC_SUBST(enable_html_docs)
AC_SUBST(enable_latex_docs)
])

# check for doxygen
BB_ENABLE_DOXYGEN
# ----------------------------------------------------------------------------

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

QSF_SCHEMA_DIR=`eval echo $datadir`"/xml/qof/qsf"
AC_SUBST(QSF_SCHEMA_DIR)

QOF_CFLAGS="-I$includedir"
QOF_LIBS="-lqof"
QOF_LIBDEPS="$LDFLAGS"
QOF_VERSION="$VERSION"

AC_CONFIG_LIBCONFIG_IN([qof], [bin])
AC_CONFIG_LIBCONFIG_IN_PKGCONFIG

AC_OUTPUT([
Makefile
backend/Makefile
backend/dwi/Makefile
backend/file/Makefile
doc/Makefile
examples/Makefile
examples/backend/Makefile
examples/gobject/Makefile
lib/Makefile
lib/libsql/Makefile
qof/Makefile
qof-0.pc
qof-config
])

ln -sf ${srcdir} qof/qof

dnl <= Configuration summary =>

echo ""
echo "qof configuration summary:"
echo "=================================="
echo ""

dnl <= CFLAGS and LDFLAGS =>
echo "CFLAGS : $CFLAGS"
echo "LDFLAGS : $LDFLAGS"
echo "DWI_LIBS : $DWI_LIBS"
echo "LIBXML2 :"`eval echo $LIBXML_VERSION`
echo "QSF DIR : "`eval echo $QSF_SCHEMA_DIR`

dnl <= Prefixes =>
echo "prefix : $prefix"
# echo "sysconf dir : "`eval echo $sysconfdir`
# echo "bin dir : "`eval echo $bindir`
echo "data dir : "`eval echo $datadir`
echo "include dir : "`eval echo $includedir`
echo "lib dir : "`eval echo $libdir`
echo ""


echo ""
dnl <= End of configuration summary =>
