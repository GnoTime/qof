## -*-m4-*-

dnl Process this file with autoconf to produce a configure script.

# FILE:
# configure.in for the QOF package
#
# FUNCTION:
# implements checks for a variety of system-specific functions
#

AC_INIT(qof,0.6.0)
AM_INIT_AUTOMAKE

dnl QOF library version needs to be incremented for 0.6 ?
LIBQOF_LIBRARY_VERSION=2:0:0
LIBQOFSQL_LIBRARY_VERSION=1:1:0
LIBQOF_BACKEND_QSF_LIBRARY_VERSION=0:0:0
AC_SUBST(LIBQOF_LIBRARY_VERSION)
AC_SUBST(LIBQOFSQL_LIBRARY_VERSION)
AC_SUBST(LIBQOF_BACKEND_QSF_LIBRARY_VERSION)

VERSION=0.6.0
AC_SUBST(VERSION)
PACKAGE=qof
AC_SUBST(PACKAGE)

AC_PROG_LIBTOOL

AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_STDC_HEADERS
AC_PROG_YACC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

AC_PATH_XTRA

AC_DEFUN(AS_SCRUB_INCLUDE,
[
  GIVEN_CFLAGS=$[$1]
  INCLUDE_DIRS=`echo | cpp -v 2>&1`

  dnl remove everything from this output between the "starts here" and "End of"
  dnl line
  INCLUDE_DIRS=`echo $INCLUDE_DIRS | sed -e 's/.*<...> search starts here://' | sed -e 's/End of search list.*//'`
  for dir in $INCLUDE_DIRS; do
    GIVEN_CFLAGS=$(echo $GIVEN_CFLAGS | sed -e "s;-I$dir ;;" | sed -e "s;-I$dir$;;")
  done
  [$1]=$GIVEN_CFLAGS
])

dnl *****************************************
dnl pkg-config check time
dnl *****************************************

LIBXML2_REQUIRED=2.5.10
AM_PATH_GLIB_2_0("2.0.0", , ,gobject)

AC_PATH_PROG(PKG_CONFIG,pkg-config)
if test "x$PKG_CONFIG" != x; then
	GLIB_VERSION=`$PKG_CONFIG --exists 'glib >= 2.0.0'`
	if test x$GLIB_VERSION != x; then
	GLIB_LIBS=`$PKG_CONFIG --libs glib-2.0`
	GLIB_CFLAGS=`$PKG_CONFIG --cflags glib-2.0`
	AC_SUBST(GLIB_CFLAGS)
	AC_SUBST(GLIB_LIBS)
	fi
fi

dnl **************************************************************
dnl libxml2
dnl libxml2 v2.5.10 is required for QSF (backend/file)
dnl **************************************************************

PKG_CHECK_MODULES(LIBXML2, libxml-2.0 >= $LIBXML2_REQUIRED)
LIBXML_VERSION=`xml2-config --version`
AC_SUBST(LIBXML2_CFLAGS)
AC_SUBST(LIBXML2_LIBS)

AC_MSG_CHECKING(for darwin)
case $host_os in
	rhapsody* | darwin1*)
		AC_MSG_RESULT([yes, but too old])
		AC_MSG_ERROR([This platform is too old, please update to the latest darwin])
		;;
	darwin*)
		AC_MSG_RESULT([yes, patching libtool to always build dylibs])
		mv libtool libtool.old
		sed -e 's/^deplibs_check_method.*/deplibs_check_method=pass_all/g' \
			-e 's|^archive_cmds.*|archive_cmds="$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs\\$linker_flags -install_name \\$rpath/\\$soname \\$verstring"|g' \
			-e 's|^library_names_spec.*|library_names_spec="\\$libname\\$release\\$versuffix.dylib \\$libname\\$release\\${major}.dylib \\$libname.dylib"|g' \
			-e 's|^soname_spec.*|soname_spec="\\$libname\\$release\\$major.dylib"|g' \
			< libtool.old > libtool
		rm libtool.old
		AC_DEFINE(DARWIN,,Found Mac OSX Darwin)
		DARWIN="dylib"
		AC_SUBST(DARWIN)
		;;
	*)
		AC_MSG_RESULT(no)
		;;
esac

dnl Stuff needed to build the example progs only ... 
dnl **************************************************************

GTK_CFLAGS=`$PKG_CONFIG --cflags gtk+-2.0`
GTK_LIBS=`$PKG_CONFIG --libs gtk+-2.0`
AS_SCRUB_INCLUDE(GTK_CFLAGS)
AS_SCRUB_INCLUDE(GTK_LIBS)
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

if test x$GTK_LIBS = x; then
   AC_MSG_WARN([****** GTK libs not found; build without GTK.])
   else
      AC_DEFINE(HAVE_GTK,,We Have Found GTK)
      HAVE_GTK="use_gtk"
fi

AM_CONDITIONAL(BUILD_GTK, [test x$HAVE_GTK != x])
AM_CONDITIONAL(BUILD_GTK, [test $HAVE_GTK = "use_gtk"])

dnl **************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl **************************************************************

AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_ST_RDEV
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T

dnl *****************************
dnl Checks for library functions.
dnl *****************************

AC_FUNC_STRFTIME
AC_CHECK_FUNCS(getcwd gettimeofday getwd stpcpy strdup strtoul)
AC_REPLACE_FUNCS(strptime localtime_r)

dnl *******************************
dnl Internationalization
dnl ******************************* 

dnl ALL_LINGUAS=" "
dnl GETTEXT_PACKAGE=qof-0.6
dnl AC_SUBST(GETTEXT_PACKAGE)
dnl AM_GLIB_GNU_GETTEXT

AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",
		[Define the gettext package.])

dnl **************************************************************
dnl If DWI is found on the build system, then build with it.
dnl Need to check for libdwi-qof too .... 
dnl **************************************************************

DWI_CFLAGS=`$PKG_CONFIG --cflags dwi-0`
DWI_LIBS=`$PKG_CONFIG --libs dwi-0`
AC_SUBST(DWI_CFLAGS)
AC_SUBST(DWI_LIBS)
                                                                                
if test x$DWI_LIBS = x; then
   AC_MSG_WARN([****** DWI libs not found; build without DWI.])
else
   AC_DEFINE(HAVE_DWI,,We Have Found DWI)
   HAVE_DWI="use_dwi"
fi

AM_CONDITIONAL(BUILD_DWI, [test x$HAVE_DWI != x])
AM_CONDITIONAL(BUILD_DWI, [test $HAVE_DWI = "use_dwi"])
AC_SUBST(HAVE_DWI)

# check for doxygen, mostly stolen from http://log4cpp.sourceforge.net/
# ----------------------------------------------------------------------------
AC_DEFUN(BB_ENABLE_DOXYGEN,
[
AC_ARG_ENABLE(doxygen, [  --enable-doxygen        enable documentation generation with doxygen (auto)])
AC_ARG_ENABLE(dot, [  --enable-dot            use 'dot' to generate graphs in doxygen (auto)])              
AC_ARG_ENABLE(html-docs, [  --enable-html-docs      enable HTML generation with doxygen (yes)], [], [ enable_html_docs=yes])              
AC_ARG_ENABLE(latex-docs, [  --enable-latex-docs     enable LaTeX documentation generation with doxygen (no)], [], [ enable_latex_docs=no])              
if test "x$enable_doxygen" = xno; then
        enable_doc=no
else 
        AC_PATH_PROG(DOXYGEN, doxygen, , $PATH)
        if test x$DOXYGEN = x; then
                if test "x$enable_doxygen" = xyes; then
                        AC_MSG_ERROR([could not find doxygen])
                fi
                enable_doc=no
        else
                enable_doc=yes
                AC_PATH_PROG(DOT, dot, , $PATH)
        fi
fi
AM_CONDITIONAL(DOC, test x$enable_doc = xyes)

if test x$DOT = x; then
        if test "x$enable_dot" = xyes; then
                AC_MSG_ERROR([could not find dot])
        fi
        enable_dot=no
else
        enable_dot=yes
fi
AM_CONDITIONAL(ENABLE_DOXYGEN, test x$enable_doc = xtrue)
AC_SUBST(enable_dot)
AC_SUBST(enable_html_docs)
AC_SUBST(enable_latex_docs)
])

# check for doxygen
BB_ENABLE_DOXYGEN
# ----------------------------------------------------------------------------

CFLAGS="${CFLAGS} -Wall"
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

QSF_SCHEMA_DIR=`eval echo $datadir`"/xml/qof/qsf"
AC_SUBST(QSF_SCHEMA_DIR)

QOF_CFLAGS="-I$includedir"
QOF_LIBS="-lqof -lqofsql"
QOF_LIBDEPS="$LDFLAGS"
QOF_VERSION="$VERSION"

dnl AC_CONFIG_LIBCONFIG_IN([qof], [bin])
dnl AC_CONFIG_LIBCONFIG_IN_PKGCONFIG

AC_OUTPUT([
Makefile
backend/Makefile
backend/dwi/Makefile
backend/file/Makefile
doc/Makefile
doc/doxygen.cfg
examples/Makefile
examples/backend/Makefile
examples/gobject/Makefile
lib/Makefile
lib/libsql/Makefile
qof/Makefile
qof/test/Makefile
qof-1.pc
])

dnl <= Configuration summary =>

echo ""
echo "qof configuration summary:"
echo "=================================="
echo ""

dnl <= CFLAGS and LDFLAGS =>
echo "CFLAGS : $CFLAGS"
echo "LDFLAGS : $LDFLAGS"
echo "QOF_CFLAGS  :   $QOF_CFLAGS"
echo "QOF_LIBS    :   $QOF_LIBS"
echo "DWI_LIBS : $DWI_LIBS"
echo "LIBXML2     :   "`eval echo $LIBXML_VERSION`
echo "prefix : $prefix"
echo "data dir : "`eval echo $datadir`
echo "QSF DIR     :   "`eval echo $QSF_SCHEMA_DIR`
echo "include dir : "`eval echo $includedir`
echo "lib dir : "`eval echo $libdir`
echo ""


echo ""
dnl <= End of configuration summary =>
